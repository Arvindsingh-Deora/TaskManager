{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arvin\\\\OneDrive\\\\Documents\\\\Reunion\\\\Task\\\\taskmanagement\\\\src\\\\Frontend\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Style/Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [summary, setSummary] = useState({\n    totalTasks: 0,\n    completedPercentage: 0,\n    pendingPercentage: 0,\n    averageCompletionTime: 0\n  });\n  const [pendingSummary, setPendingSummary] = useState({\n    totalPendingTasks: 0,\n    totalTimeCompleted: 0,\n    totalTimeLeft: 0\n  });\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:9000/api/tasks/get');\n        const tasks = response.data;\n        setTasks(tasks);\n        calculateSummary(tasks);\n        calculatePendingSummary(tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const calculateSummary = tasks => {\n    const totalTasks = tasks.length;\n    const completedTasks = tasks.filter(task => task.status === 'Completed');\n    const pendingTasks = tasks.filter(task => task.status === 'Pending');\n    const completedPercentage = totalTasks > 0 ? (completedTasks.length / totalTasks * 100).toFixed(2) : 0;\n    const pendingPercentage = totalTasks > 0 ? (pendingTasks.length / totalTasks * 100).toFixed(2) : 0;\n    const totalTime = completedTasks.reduce((sum, task) => sum + task.totalTime, 0);\n    const averageCompletionTime = completedTasks.length ? (totalTime / completedTasks.length).toFixed(2) : 0;\n    setSummary({\n      totalTasks,\n      completedPercentage,\n      pendingPercentage,\n      averageCompletionTime\n    });\n  };\n  const calculatePendingSummary = tasks => {\n    const pendingTasks = tasks.filter(task => task.status === 'Pending');\n    const totalPendingTasks = pendingTasks.length;\n    const totalTimeCompleted = tasks.filter(task => task.status === 'Completed').reduce((total, task) => total + task.totalTime, 0);\n    const totalTimeLeft = pendingTasks.reduce((total, task) => {\n      const startTime = new Date(task.startTime);\n      const endTime = task.endTime ? new Date(task.endTime) : new Date();\n      return total + (endTime - startTime) / 1000 / 60; // Total time in minutes\n    }, 0);\n    setPendingSummary({\n      totalPendingTasks,\n      totalTimeCompleted: totalTimeCompleted.toFixed(2),\n      totalTimeLeft: totalTimeLeft.toFixed(2)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Tasks: \", summary.totalTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Task Completed: \", summary.completedPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Task Pending: \", summary.pendingPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Time to Complete All Tasks: \", summary.averageCompletionTime, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pending-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Pending Task Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Pending Tasks: \", pendingSummary.totalPendingTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Time Completed: \", pendingSummary.totalTimeCompleted, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Time Left of All Pending Tasks: \", pendingSummary.totalTimeLeft, \" minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4q4DlQ2iZCRVBn63u/qmZ7x9Eps=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","summary","setSummary","totalTasks","completedPercentage","pendingPercentage","averageCompletionTime","pendingSummary","setPendingSummary","totalPendingTasks","totalTimeCompleted","totalTimeLeft","fetchTasks","response","get","data","calculateSummary","calculatePendingSummary","error","console","length","completedTasks","filter","task","status","pendingTasks","toFixed","totalTime","reduce","sum","total","startTime","Date","endTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arvin/OneDrive/Documents/Reunion/Task/taskmanagement/src/Frontend/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Style/Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [summary, setSummary] = useState({\r\n    totalTasks: 0,\r\n    completedPercentage: 0,\r\n    pendingPercentage: 0,\r\n    averageCompletionTime: 0,\r\n  });\r\n  const [pendingSummary, setPendingSummary] = useState({\r\n    totalPendingTasks: 0,\r\n    totalTimeCompleted: 0,\r\n    totalTimeLeft: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:9000/api/tasks/get');\r\n        const tasks = response.data;\r\n        setTasks(tasks);\r\n        calculateSummary(tasks);\r\n        calculatePendingSummary(tasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const calculateSummary = (tasks) => {\r\n    const totalTasks = tasks.length;\r\n    const completedTasks = tasks.filter((task) => task.status === 'Completed');\r\n    const pendingTasks = tasks.filter((task) => task.status === 'Pending');\r\n  \r\n    const completedPercentage = totalTasks > 0\r\n      ? ((completedTasks.length / totalTasks) * 100).toFixed(2)\r\n      : 0;\r\n  \r\n    const pendingPercentage = totalTasks > 0\r\n      ? ((pendingTasks.length / totalTasks) * 100).toFixed(2)\r\n      : 0;\r\n  \r\n    const totalTime = completedTasks.reduce((sum, task) => sum + task.totalTime, 0);\r\n  \r\n    const averageCompletionTime = completedTasks.length\r\n      ? (totalTime / completedTasks.length).toFixed(2)\r\n      : 0;\r\n  \r\n    setSummary({\r\n      totalTasks,\r\n      completedPercentage,\r\n      pendingPercentage,\r\n      averageCompletionTime,\r\n    });\r\n  };\r\n  const calculatePendingSummary = (tasks) => {\r\n    const pendingTasks = tasks.filter((task) => task.status === 'Pending');\r\n    const totalPendingTasks = pendingTasks.length;\r\n\r\n    const totalTimeCompleted = tasks\r\n      .filter((task) => task.status === 'Completed')\r\n      .reduce((total, task) => total + task.totalTime, 0);\r\n\r\n    const totalTimeLeft = pendingTasks.reduce((total, task) => {\r\n      const startTime = new Date(task.startTime);\r\n      const endTime = task.endTime ? new Date(task.endTime) : new Date();\r\n      return total + (endTime - startTime) / 1000 / 60; // Total time in minutes\r\n    }, 0);\r\n\r\n    setPendingSummary({\r\n      totalPendingTasks,\r\n      totalTimeCompleted: totalTimeCompleted.toFixed(2),\r\n      totalTimeLeft: totalTimeLeft.toFixed(2),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Dashboard</h1>\r\n      <div className=\"summary\">\r\n        <h2>Summary</h2>\r\n        <p>Total Tasks: {summary.totalTasks}</p>\r\n        <p>Task Completed: {summary.completedPercentage}%</p>\r\n        <p>Task Pending: {summary.pendingPercentage}%</p>\r\n        <p>Average Time to Complete All Tasks: {summary.averageCompletionTime} minutes</p>\r\n      </div>\r\n\r\n      <div className=\"pending-summary\">\r\n        <h2>Pending Task Summary</h2>\r\n        <p>Total Pending Tasks: {pendingSummary.totalPendingTasks}</p>\r\n        <p>Total Time Completed: {pendingSummary.totalTimeCompleted} minutes</p>\r\n        <p>Total Time Left of All Pending Tasks: {pendingSummary.totalTimeLeft} minutes</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}